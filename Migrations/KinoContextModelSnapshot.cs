// <auto-generated />
using System;
using Kino.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kino.Migrations
{
    [DbContext(typeof(KinoContext))]
    partial class KinoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kino.Models.Filmy", b =>
                {
                    b.Property<int>("Id_filmu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_filmu"));

                    b.Property<int>("Czas_trwania")
                        .HasColumnType("int");

                    b.Property<int?>("GatunekId_gatunku")
                        .HasColumnType("int");

                    b.Property<string>("Plakat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RezyserId_rezysera")
                        .HasColumnType("int");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<string>("Tytul")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_filmu");

                    b.HasIndex("GatunekId_gatunku");

                    b.HasIndex("RezyserId_rezysera");

                    b.ToTable("Filmy", (string)null);
                });

            modelBuilder.Entity("Kino.Models.Gatunki", b =>
                {
                    b.Property<int>("Id_gatunku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_gatunku"));

                    b.Property<string>("Gatunek")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_gatunku");

                    b.ToTable("Gatunki", (string)null);
                });

            modelBuilder.Entity("Kino.Models.Kina", b =>
                {
                    b.Property<int>("Id_kina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_kina"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa_Kina")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_kina");

                    b.ToTable("Kina", (string)null);
                });

            modelBuilder.Entity("Kino.Models.Rezyserzy", b =>
                {
                    b.Property<int>("Id_rezysera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rezysera"));

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_rezysera");

                    b.ToTable("Rezyserzy", (string)null);
                });

            modelBuilder.Entity("Kino.Models.Seanse", b =>
                {
                    b.Property<int>("Id_seansu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_seansu"));

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("FilmId_filmu")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("kinoId_kina")
                        .HasColumnType("int");

                    b.HasKey("Id_seansu");

                    b.HasIndex("FilmId_filmu");

                    b.HasIndex("kinoId_kina");

                    b.ToTable("Seanse", (string)null);
                });

            modelBuilder.Entity("Kino.Models.Filmy", b =>
                {
                    b.HasOne("Kino.Models.Gatunki", "Gatunek")
                        .WithMany("Film")
                        .HasForeignKey("GatunekId_gatunku");

                    b.HasOne("Kino.Models.Rezyserzy", "Rezyser")
                        .WithMany("Filmy")
                        .HasForeignKey("RezyserId_rezysera");

                    b.Navigation("Gatunek");

                    b.Navigation("Rezyser");
                });

            modelBuilder.Entity("Kino.Models.Seanse", b =>
                {
                    b.HasOne("Kino.Models.Filmy", "Film")
                        .WithMany("Seans")
                        .HasForeignKey("FilmId_filmu");

                    b.HasOne("Kino.Models.Kina", "kino")
                        .WithMany("seans")
                        .HasForeignKey("kinoId_kina");

                    b.Navigation("Film");

                    b.Navigation("kino");
                });

            modelBuilder.Entity("Kino.Models.Filmy", b =>
                {
                    b.Navigation("Seans");
                });

            modelBuilder.Entity("Kino.Models.Gatunki", b =>
                {
                    b.Navigation("Film");
                });

            modelBuilder.Entity("Kino.Models.Kina", b =>
                {
                    b.Navigation("seans");
                });

            modelBuilder.Entity("Kino.Models.Rezyserzy", b =>
                {
                    b.Navigation("Filmy");
                });
#pragma warning restore 612, 618
        }
    }
}
